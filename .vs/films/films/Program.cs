using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace films
{
    class Program
    {
        public static Dictionary<string, string> lang = new Dictionary<string, string>();
        static async Task Main(string[] args)
        {
            lang.Add("af", "Afrikaans");
            lang.Add("ak", "Akan");
            lang.Add("sq", "Albanian");
            lang.Add("am", "Amharic");
            lang.Add("ar", "Arabic");
            lang.Add("an", "Aragonese");
            lang.Add("hy", "Armenian");
            lang.Add("as", "Assamese");
            lang.Add("av", "Avaric");
            lang.Add("ae", "Avestan");
            lang.Add("ay", "Aymara");
            lang.Add("az", "Azerbaijani");
            lang.Add("bm", "Bambara");
            lang.Add("ba", "Bashkir");
            lang.Add("eu", "Basque");
            lang.Add("be", "Belarusian");
            lang.Add("bn", "Bengali");
            lang.Add("bh", "Bihari");
            lang.Add("bi", "Bislama");
            lang.Add("bs", "Bosnian");
            lang.Add("br", "Breton");
            lang.Add("bg", "Bulgarian");
            lang.Add("my", "Burmese");
            lang.Add("ca", "Catalan");
            lang.Add("km", "Central Khmer");
            lang.Add("ch", "Chamorro");
            lang.Add("ce", "Chechen");
            lang.Add("zh", "Chinese");
            lang.Add("cu", "Church Slavic");
            lang.Add("cv", "Chuvash");
            lang.Add("kw", "Cornish");
            lang.Add("co", "Corsican");
            lang.Add("cr", "Cree");
            lang.Add("hr", "Croatian");
            lang.Add("cs", "Czech");
            lang.Add("da", "Danish");
            lang.Add("nl", "Dutch");
            lang.Add("dz", "Dzongkha");
            lang.Add("en", "English");
            lang.Add("eo", "Esperanto");
            lang.Add("et", "Estonian");
            lang.Add("ee", "Ewe");
            lang.Add("fo", "Faroese");
            lang.Add("fj", "Fijian");
            lang.Add("fi", "Finnish");
            lang.Add("fr", "French");
            lang.Add("ff", "Fulah");
            lang.Add("gd", "Gaelic");
            lang.Add("gl", "Galician");
            lang.Add("lg", "Ganda");
            lang.Add("ka", "Georgian");
            lang.Add("de", "German");
            lang.Add("el", "Greek");
            lang.Add("kl", "Greenlandic");
            lang.Add("gn", "Guarani");
            lang.Add("gu", "Gujarati");
            lang.Add("ht", "Haitian");
            lang.Add("ha", "Hausa");
            lang.Add("he", "Hebrew");
            lang.Add("hz", "Herero");
            lang.Add("hi", "Hindi");
            lang.Add("ho", "Hiri Motu");
            lang.Add("hu", "Hungarian");
            lang.Add("is", "Icelandic");
            lang.Add("io", "Ido");
            lang.Add("ig", "Igbo");
            lang.Add("id", "Indonesian");
            lang.Add("ia", "Interlingua");
            lang.Add("ie", "Interlingue");
            lang.Add("iu", "Inuktitut");
            lang.Add("ik", "Inupiaq");
            lang.Add("ga", "Irish");
            lang.Add("it", "Italian");
            lang.Add("ja", "Japanese");
            lang.Add("jv", "Javanese");
            lang.Add("kn", "Kannada");
            lang.Add("kr", "Kanuri");
            lang.Add("ks", "Kashmiri");
            lang.Add("kk", "Kazakh");
            lang.Add("ki", "Kikuyu");
            lang.Add("rw", "Kinyarwanda");
            lang.Add("kv", "Komi");
            lang.Add("kg", "Kongo");
            lang.Add("ko", "Korean");
            lang.Add("kj", "Kuanyama");
            lang.Add("ku", "Kurdish");
            lang.Add("ky", "Kyrgyz");
            lang.Add("lo", "Lao");
            lang.Add("la", "Latin");
            lang.Add("lv", "Latvian");
            lang.Add("li", "Limburger");
            lang.Add("ln", "Lingala");
            lang.Add("lt", "Lithuanian");
            lang.Add("lu", "Luba-Katanga");
            lang.Add("lb", "Luxembourgish");
            lang.Add("mk", "Macedonian");
            lang.Add("mg", "Malagasy");
            lang.Add("ms", "Malay");
            lang.Add("ml", "Malayalam");
            lang.Add("dv", "Maldivian");
            lang.Add("mt", "Maltese");
            lang.Add("gv", "Manx");
            lang.Add("mi", "Maori");
            lang.Add("mr", "Marathi");
            lang.Add("mh", "Marshallese");
            lang.Add("mn", "Mongolian");
            lang.Add("na", "Nauru");
            lang.Add("nv", "Navaho");
            lang.Add("nd", "North Ndebele");
            lang.Add("nr", "South Ndebele");
            lang.Add("ng", "Ndonga");
            lang.Add("ne", "Nepali");
            lang.Add("se", "Northern Sami");
            lang.Add("no", "Norwegian");
            lang.Add("nb", "Norwegian Bokmål");
            lang.Add("nn", "Norwegian Nynorsk");
            lang.Add("ii", "Nuosu");
            lang.Add("ny", "Nyanja");
            lang.Add("oc", "Occitan");
            lang.Add("oj", "Ojibwa");
            lang.Add("or", "Oriya");
            lang.Add("om", "Oromo");
            lang.Add("os", "Ossetian");
            lang.Add("pi", "Pali");
            lang.Add("pa", "Panjabi");
            lang.Add("ps", "Pashto");
            lang.Add("fa", "Persian");
            lang.Add("pl", "Polish");
            lang.Add("pt", "Portuguese");
            lang.Add("qu", "Quechua");
            lang.Add("ro", "Romanian");
            lang.Add("rm", "Romansh");
            lang.Add("rn", "Rundi");
            lang.Add("ru", "Russian");
            lang.Add("sm", "Samoan");
            lang.Add("sg", "Sango");
            lang.Add("sa", "Sanskrit");
            lang.Add("sc", "Sardinian");
            lang.Add("sr", "Serbian");
            lang.Add("sn", "Shona");
            lang.Add("sd", "Sindhi");
            lang.Add("si", "Sinhalese");
            lang.Add("sk", "Slovak");
            lang.Add("sl", "Slovenian");
            lang.Add("so", "Somali");
            lang.Add("st", "Southern Sotho");
            lang.Add("es", "Spanish");
            lang.Add("su", "Sundanese");
            lang.Add("sw", "Swahili");
            lang.Add("ss", "Swati");
            lang.Add("sv", "Swedish");
            lang.Add("tl", "Tagalog");
            lang.Add("ty", "Tahitian");
            lang.Add("tg", "Tajik");
            lang.Add("ta", "Tamil");
            lang.Add("tt", "Tatar");
            lang.Add("te", "Telugu");
            lang.Add("th", "Thai");
            lang.Add("bo", "Tibetan");
            lang.Add("ti", "Tigrinya");
            lang.Add("to", "Tonga");
            lang.Add("ts", "Tsonga");
            lang.Add("tn", "Tswana");
            lang.Add("tr", "Turkish");
            lang.Add("tk", "Turkmen");
            lang.Add("tw", "Twi");
            lang.Add("uk", "Ukrainian");
            lang.Add("ur", "Urdu");
            lang.Add("ug", "Uyghur");
            lang.Add("uz", "Uzbek");
            lang.Add("ve", "Venda");
            lang.Add("vi", "Vietnamese");
            lang.Add("vo", "Volapük");
            lang.Add("wa", "Walloon");
            lang.Add("cy", "Welsh");
            lang.Add("fy", "Western Frisian");
            lang.Add("wo", "Wolof");
            lang.Add("xh", "Xhosa");
            lang.Add("yi", "Yiddish");
            lang.Add("yo", "Yoruba");
            lang.Add("za", "Zhuang");
            lang.Add("zu", "Zulu");


            Console.WriteLine("TMDB film viewer!");
            while (true)
            {
                Console.WriteLine("\nOptions:");
                Console.WriteLine("1) Select film");
                Console.WriteLine("2) Search film");
                Console.WriteLine("0) Exit program");
                int input = 99;
                bool parse = int.TryParse(Console.ReadLine(), out input);
                if (!parse) { continue; }
                switch (input)
                {
                    case 0: Environment.Exit(0); break;
                    case 1: await DisplayFilm.Run();   break;
                    case 2: Console.WriteLine("TWO"); break;
                    default: Console.WriteLine("invalid option\n"); break;
                }
            }

        }
    }
}